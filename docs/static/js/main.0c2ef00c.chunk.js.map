{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","ctg","console","log","type","value","onChange","target","placeholder","getGifs","category","a","url","encodeURI","fetch","response","json","data","gifsData","map","img","id","title","images","original","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2LAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAmB5C,OACI,8BACI,sBAAMC,SAZO,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAE1BR,GAAc,SAAAS,GAAG,OAAKP,GAAL,mBAAoBO,OACrCN,EAAc,KAElBO,QAAQC,IAAI,yBAKR,SACI,uBACIC,KAAO,OACPC,MAASX,EACTY,SArBU,SAACT,GAEvBF,EAAcE,EAAEU,OAAOF,QAoBXG,YAAc,8B,+BC1BrBC,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEII,MAAMF,GAFV,cAEbG,EAFa,gBAGEA,EAASC,OAHX,uBAGZC,EAHY,EAGZA,KAEDC,EAAWD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC9B,MAAO,CACHC,GAAKD,EAAIC,GACTC,MAAQF,EAAIE,MACZV,IAAG,UAAGQ,EAAIG,cAAP,aAAG,EAAYC,SAASZ,QAInCV,QAAQC,IAAIe,GAbO,kBAcZA,GAdY,4CAAH,sDCDPO,EAAc,SAAC,GAAsB,IAArBJ,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEpC,OADAV,QAAQC,IAAIkB,EAAIC,EAAOV,GAEnB,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCHHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAc,IAAD,EACZjB,mBAAS,CAC/BwB,KAAO,GACPa,SAAU,IAHwB,mBAC/BC,EAD+B,KACxBC,EADwB,KAiBtC,OAXAC,qBAAU,WAENxB,EAAQC,GACHwB,MAAK,SAAAC,GACEH,EAAS,CACLf,KAAOkB,EACPL,SAAU,SAG3B,IAEIC,EDT0BK,CAAa1B,GAAhCa,EAPqB,EAO5BN,KAAea,EAPa,EAObA,QAItB,OACI,qCACA,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAG/CoB,GAAW,mBAAGJ,UAAU,mCAAb,wBAGf,qBAAKA,UAAU,YAAf,SACI,6BAEQH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAESA,GADEA,EAAIC,eExB1BgB,EAAe,WAAO,IAAD,EAEM5C,mBAAS,CAAC,WAFhB,mBAEvB6C,EAFuB,KAEX9C,EAFW,KAQ9B,OACI,gCACI,oBAAIkC,UAAU,0CAAd,qBACA,cAAC,EAAD,CAAalC,cAAeA,IAC5B,uBACA,6BAEQ8C,EAAWnB,KAAI,SAACT,GAAD,OACX,cAAC,EAAD,CACIA,SAAUA,GACLA,Y,MCjBjC6B,IAASC,OACP,cAAC,EAAD,IAGAC,SAASC,eAAe,W","file":"static/js/main.0c2ef00c.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        // console.log(e.target.value);\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 2){\r\n            /** Recibir el setCategories */\r\n            setCategories(ctg => [inputValue, ...ctg]);\r\n            setInputValue('');\r\n        }\r\n        console.log(\"Enviado exitosamente\");\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleSubmit}>\r\n                <input \r\n                    type = \"text\"\r\n                    value = {inputValue}\r\n                    onChange = {handleInputChange}\r\n                    placeholder = \"Search some GIF'S...\"\r\n                />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\n/**\r\n * Candado para la funcion\r\n */\r\nAddCategory.propTypes = {\r\n    setCategories : PropTypes.func.isRequired\r\n}\r\n","/**\r\n * Peticion HTTP\r\n */\r\nexport const getGifs = async(category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=uM78vBf0nGy73OrLFKHshPyzcqzwQHHB`;\r\n    const response = await fetch(url);\r\n    const {data} = await response.json();\r\n\r\n    const gifsData = data.map( img => {\r\n        return {\r\n            id : img.id,\r\n            title : img.title,\r\n            url : img.images?.original.url\r\n        }\r\n    });\r\n\r\n    console.log(gifsData);\r\n    return gifsData;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n    console.log(id, title, url);\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    // const [images, setImages] = useState([])\r\n\r\n    /**\r\n     * Custom hook\r\n     */\r\n    const {data : images, loading} = useFetchGifs(category);\r\n\r\n    //getGifs();\r\n\r\n    return (\r\n        <>\r\n        <h3 className=\"animate__animated animate__shakeX\">{category}</h3>\r\n\r\n        {\r\n            loading && <p className=\"animate__animated animate__flash\">Loading...</p>\r\n        }\r\n\r\n        <div className=\"card-grid\">\r\n            <ol>\r\n                {\r\n                    images.map( img => (\r\n                        <GifGridItem \r\n                            key = {img.id}\r\n                            { ...img }\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import {useState, useEffect} from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data : [],\r\n        loading : true\r\n    });\r\n\r\n    useEffect(()=>{\r\n        /**Traer las imagenes */\r\n        getGifs(category)\r\n            .then(imgs => {\r\n                    setState({\r\n                        data : imgs,\r\n                        loading : false\r\n                    });\r\n            })\r\n    }, [])\r\n\r\n    return state;\r\n}","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid'\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState([\"Batman\"])\r\n\r\n    // const handleAdd = () => {\r\n    //     setCategories([...categories, 'Venom'])\r\n    // }\r\n\r\n    return (\r\n        <div>\r\n            <h1 className=\"animate__animated animate__bounceInDown\">GIF App</h1>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr />\r\n            <ol>\r\n                {\r\n                    categories.map((category) => (\r\n                        <GifGrid \r\n                            category={category}\r\n                            key={category}\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {GifExpertApp} from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp>\n\n  </GifExpertApp>,\n  document.getElementById('root')\n);"],"sourceRoot":""}